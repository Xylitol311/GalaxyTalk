plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2024.0.0")
}

dependencies {

    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // Spring Boot Starter dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'       // Web + Servlet 컨테이너
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client' // OAuth2 클라이언트
    implementation 'org.springframework.boot:spring-boot-starter-security'  // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'  // Spring Data JPA

    // Database drivers (필요한 DB 드라이버만 유지)
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // 개발 편의성 도구
    developmentOnly 'org.springframework.boot:spring-boot-devtools'         // DevTools for Hot Reload

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'  // Spring Boot Test
    testImplementation 'org.springframework.security:spring-security-test' // Spring Security Test

    //jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //eureka
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'


}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
