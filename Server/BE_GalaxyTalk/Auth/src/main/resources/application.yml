# SERVER SETTING
server:
  address: localhost
  port: 8081

spring:
  application:
    name: auth-service

  profiles:
    include: redis


#LOGIN SETTING
  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
            redirect-uri: ${AUTH_SERVICE_URL}/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            client-name: Naver
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

  jwt:
    secret: ${JWT_SECRET}

#MVC : HELPING FIND PATH LIKE /** OR /*
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

#REDIS
## SERIALIZATION ERROR CONTROLLER FOR REDIS
  jackson:
    serialization:
      fail-on-empty-beans: false

  data:
    redis:
      port: 6379
      host: 127.0.0.1
      password: ${REDIS_PASSWORD}

#JPA
  jpa:
    database: mysql
    hibernate:
      ddl-auto: update
    generate-ddl: true
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect

#MYSQL
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/${MYSQL_DATABASE}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: root
    password: ${MYSQL_ROOT_PASSWORD}

#GATEWAY : HELPING USING DISCOVERY LOCATOR LIKE EUREKA
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true

#Swagger settings : DOCS PATH SETTING
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html

#Eureka settings
eureka:
  client:
    register-with-eureka: true #REGISTER IN EUREKA T/F
    fetch-registry: true #GET OTHER SERVICE FROM EUREKA AND COMMUNICATE
    service-url:
      defaultZone: ${EUREKA_SERVICE_URL}/eureka/ #EUREKA SERVER URL
  instance:
    prefer-ip-address: true # FALSE : REGIST SERVICE BY HOSTNAME EX) LOCALHOST(might cause error in docker) / TRUE : REGIST SERVICE BY IP
    leaseRenewalIntervalInSeconds: 5 #GATEWAY CONNECT TO EUREKA SERVER PER 5SEC, REFRESH SERVICE INSTANCE
    leaseExpirationDurationInSeconds: 10 #EUREKA DELETE SERVICE INSTANCE IF DOES NOT REFRESH UNTIL 10 SEC
#    hostname: localhost
    ip-address: 127.0.0.1
    instance-id: ${spring.application.name}:${server.port} #MAKE Instance unique ID

#Actuator settings : FOR DEBUG
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

auth:
  service:
    url: ${AUTH_SERVICE_URL}

gateway:
  service:
    url: ${GATEWAY_SERVICE_URL}

front:
  url: ${FRONT_URL}
